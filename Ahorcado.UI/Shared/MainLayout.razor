@inherits LayoutComponentBase

<PageTitle>Ahorcado</PageTitle>
@if (autenticado == true)
{
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>
        <main>
            <div class="top-row px-4">
                <button class="btn btn-success" @onclick="Logout">Cerrar sesion</button>
            </div>
            <article class="content px-4">
                <CascadingValue Value="@usuario">
                    @Body
                </CascadingValue>
            </article>
        </main>
    </div>
}
else
{
    <div class="page" style="height: 100vh">
        <div class="card" style="width: 18rem; margin: auto">
            <div class="card-body">
                @if (error_autenticacion)
                {
                    <alert class="alert alert-danger">Datos incorrectos</alert>
                    <br />
                    <br />
                }
                else if (error_registro)
                {
                    <alert class="alert alert-danger">Nombre de usuario ya existe.</alert>
                    <br />
                    <br />
                }
                <input @bind-value="texto_nombre_usuario" type="text" id="txt_nombreusuario" placeholder="Nombre de usuario" @onkeyup="@Enter" @oninput="(e) => InputChange(e, 'u')" />
                <br />
                <br />
                <input @bind-value="texto_password" type="password" id="txt_password" placeholder="Contraseña" @onkeyup="@Enter" @oninput="(e) => InputChange(e, 'p')" />
                <br />
                <br />
                <button class="btn btn-success" id="btn_login" @onclick="Login" disabled="@(!credentialsValid)">Iniciar sesion</button>
                <br />
                <br />
                <button class="btn btn-primary" id="btn_registro" @onclick="Registro" disabled="@(!credentialsValid)">Crear nueva cuenta</button>
                <br />
            </div>
        </div>
    </div>
}
@code {
    bool autenticado = false;
    bool credentialsValid = false;
    bool error_autenticacion = false;
    bool error_registro = false;
    string texto_nombre_usuario = "";
    string texto_password = "";
    Ahorcado.Entidades.Usuario usuario = new();

    private void Login()
    {
        error_autenticacion = false;

        usuario = Ahorcado.Data.UsuarioData.Login(texto_nombre_usuario, texto_password);
        if (usuario.ID > 0)
        {
            autenticado = true;
            StateHasChanged();
        }
        else
        {
            error_autenticacion = true;
        }
    }

    private void AreCredentialsValid()
    {
        credentialsValid = IsCredentialValid(texto_nombre_usuario) && IsCredentialValid(texto_password);
    }

    private bool IsCredentialValid(string cred)
    {
        return (!cred.Contains(' ') && cred.Length >= 4);
    }

    private void Enter(KeyboardEventArgs e)
    {
        if ((e.Code == "Enter" || e.Code == "NumpadEnter") && credentialsValid)
        {
            Login();
        }
    }

    private void InputChange(ChangeEventArgs e, char controlName)
    {
        switch (controlName)
        {
            case 'u':
                texto_nombre_usuario = e.Value?.ToString() ?? "";
                break;
            case 'p':
                texto_password = e.Value?.ToString() ?? "";
                break;
            default:
                break;
        }
        AreCredentialsValid();
    }

    private void Registro()
    {
        error_autenticacion = false;
        error_registro = !Ahorcado.Data.UsuarioData.RegistrarUsuario(texto_nombre_usuario, texto_password);

        if (!error_registro)
        {
            Login();
            return;
        }

        StateHasChanged();
    }

    private void Logout()
    {
        autenticado = false;
        error_autenticacion = false;
        error_registro = false;
        texto_nombre_usuario = "";
        texto_password = "";

        StateHasChanged();
    }

}
